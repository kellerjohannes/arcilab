(sys:load "/home/johannes/Coding/extempore/arcilab/algorithms/arciorgano-comm.xtm")

(define testglissando
  (lambda (key time delta)
    (cond ((and (<= key 0) (< delta 0)) (set! delta (* delta -1)))
          ((and (>= key 139) (> delta 0)) (set! delta (* delta -1)))
          (else (pln time key 9000)))
    (print key " | ")
    (callback (+ time 1000) 'testglissando (+ key delta) (+ time 1300) delta)))

(testglissando 0 (now) 1)


(define glissando1
  (lambda (first last delta time)
    (pln time first (* 11 *second*))
    (cond 
      ((= first last) 0)
      (else (callback (+ time 500) 'glissando1 (+ first delta) last delta (+ time (* 0.3 *second*)))))))


; 'glissando 1' in the recording
(glissando1 138 62 -1 (now))
(glissando1 138 98 -1 (now))

; 'glissando 2' in the recording
(glissando1 98 62 -1 (now))

; glissando 3
(glissando1 62 1 -1 (now))

(glissando2 66 100 1 *second* (* 0.1 *second*) (now))

(- 98 36)
(/ 26 61.0)

(pln (now) 2 (* 15 *second*))
(pln (now) 3 (* 15 *second*))

(pln (now) 138 *second*)


(define clusterblock
  (lambda (first last duration time)
    (let ((i 0))
      (dotimes (i (- last first))
        (pln time (+ first i) duration)))))

(clusterblock 1 5 *second* (now))


(define glissando2
  (lambda (first last delta duration durationdelta time)
    (pln time first duration)
    (cond 
      ((= first last) 0)
      (else (callback (+ time 500) 'glissando2 
            (+ first delta) 
            last 
            delta 
            (+ duration durationdelta) 
            durationdelta 
            (+ time (* 0.5 *second*)))))))
