(bind-val ROLL_ERR_FLAG_DEBUG i32 0)
(bind-val ROLL_ERR_FLAG_FATAL i32 1)
(bind-val ROLL_ERR_FLAG_WARNING i32 2)
(bind-val ROLL_ERR_FLAG_INFO i32 3)

(bind-val ROLL_ERR_DEST_FILE i32 0)
(bind-val ROLL_ERR_DEST_CONSOLE i32 1)
(bind-val ROLL_ERR_DEST_ALL i32 2)

(bind-type RollError <i8*,i64>)

(bind-func id:[i8*,RollError*]*
  (lambda (re)
    (tref re 0)))

(bind-func count:[i64,RollError*]*
  (lambda (re)
    (tref re 1)))

(bind-func roll_create_logfile:[RollError*,String*]*
  (lambda (filepath)
    (let ((file (fopen (cstring filepath) "w")))
      (cond ((null? file) (printf "Error: could not open logfile for writing.\n") null)
            (else (fprintf file "Logfile roll module of ArciLab software.\n")
                  (let ((res (RollError:[RollError*,i8*,i64]* file 0)))
                    res))))))

(bind-func roll_close_logfile:[void,RollError*]*
  (lambda (re)
    (cond ((null? (id re)) (printf "Error: no logfile.\n") void)
          (else (fprintf (id re) "End of logfile.")
                (fclose (id re))
                (printf "Logfile closed.\n")
                void))))
    
(bind-func roll_error:[void,RollError*,String*,i32,i32]*
  (lambda (re message flag destination)
    (cond ((null? (id re)) (printf "Error: no logfile.\n") void)
          (else
            (let ((type:String* (salloc)))
              (cond ((= flag ROLL_ERR_FLAG_DEBUG) (set! type (Str "Debug")))
                    ((= flag ROLL_ERR_FLAG_FATAL) (set! type (Str "Fatal error")))
                    ((= flag ROLL_ERR_FLAG_WARNING) (set! type (Str "Warning")))
                    ((= flag ROLL_ERR_FLAG_INFO) (set! type (Str "Information")))
                    (else (set! type (Str "[unknown error type]"))))
              (if (or (= destination ROLL_ERR_DEST_CONSOLE)
                      (= destination ROLL_ERR_DEST_ALL))
                (begin (printf "@%lld, %s: %s\n" (now) (cstring type) (cstring message))))
              (if (or (= destination ROLL_ERR_DEST_FILE)
                      (= destination ROLL_ERR_DEST_ALL))
                (begin (fprintf (id re) "@%lld, %s: %s\n" (now) (cstring type) (cstring message))))
              void)))))


